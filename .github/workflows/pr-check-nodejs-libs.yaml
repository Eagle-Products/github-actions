name: Pre Pull Request Check Nodejs Libs
on:
  workflow_call:
    inputs:
      org_name:
        required: true
        type: string
    secrets:
      NODE_AUTH_TOKEN:
        required: true
jobs:
  prepr-check:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: Create NPMRC
        run: |
            echo "//npm.pkg.github.com/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" >> ~/.npmrc
            echo "@${{ inputs.org_name }}:registry=https://npm.pkg.github.com" >> ~/.npmrc
            echo 'registry "https://registry.yarnpkg.com"' >> ~/.yarnrc
      - name: yarn Install
        run: |
          yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: Build
        if: always()
        run: |
          yarn build
      - name: Run tests
        if: always()
        run: |
          yarn test:cov
      - name: Coveralls
        uses: romeovs/lcov-reporter-action@v0.2.21
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
      - name: Check is template repo
        id: check_template_repo
        uses: andstor/file-existence-action@v1
        with:
          files: ".template_repo"

      - uses: actions/setup-node@v2
        with:
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@${{ inputs.org_name }}'
      - name: Configure git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
      # Publish to GitHub Packages
      - name: Publish to GitHub Packages - PR
        if: steps.check_template_repo.outputs.files_exists == 'false' && github.event_name == 'pull_request'
        run: yarn release --canary --preid pr${{ github.event.number }}bld${{ github.run_number }} --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to GitHub Packages - Release
        if: steps.check_template_repo.outputs.files_exists == 'false' && github.event_name != 'pull_request'
        run: yarn release --yes
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
